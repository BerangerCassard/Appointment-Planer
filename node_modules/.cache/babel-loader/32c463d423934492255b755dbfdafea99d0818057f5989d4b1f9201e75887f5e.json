{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bronicles\\\\Desktop\\\\appointment-planner-starting-v18\\\\appointment-planner-starting-v18\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for\r\n  contacts and appointments\r\n  */\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const addContact = (name, phone, email) => {\n    setContacts(prevState => [{\n      name: name,\n      phone: phone,\n      email: email\n    }, ...prevState]);\n  };\n  const addAppointment = (name, contact, date, time) => {\n    setAppointments(prevState => [{\n      name: name,\n      contact: contact,\n      date: date,\n      time: time\n    }, ...prevState]);\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contacts: contacts,\n        addContact: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        appointments: appointments,\n        addAppointment: addAppointment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ilNV2NNtl3t/F9tV3D6w+C6XRbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointments","setAppointments","addContact","name","phone","email","prevState","addAppointment","contact","date","time","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["C:/Users/Bronicles/Desktop/appointment-planner-starting-v18/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for\r\n  contacts and appointments\r\n  */\r\n    const [contacts, setContacts] = useState([]);\r\n    const [appointments, setAppointments] = useState([]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n    const addContact = (name, phone, email) => {\r\n        setContacts( (prevState) => [{name: name, phone: phone, email: email},...prevState]);\r\n    };\r\n\r\n    const addAppointment = (name, contact, date, time) => {\r\n        setAppointments((prevState) => [{name: name, contact: contact, date: date, time: time},...prevState],)\r\n    }\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage\r\n          contacts={contacts}\r\n          addContact={addContact}\r\n      /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage\r\n          appointments={appointments}\r\n          addAppointment={addAppointment}\r\n      /> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n\r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}